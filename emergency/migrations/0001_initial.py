# Generated by Django 4.2.16 on 2025-09-19 16:09

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmergencyHospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
                ('city', models.CharField(default='Mumbai', max_length=100)),
                ('state', models.CharField(default='Maharashtra', max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('emergency_phone', models.CharField(help_text='24/7 Emergency contact', max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('is_active', models.BooleanField(default=True)),
                ('is_emergency_partner', models.BooleanField(default=True)),
                ('operates_24x7', models.BooleanField(default=True)),
                ('opening_time', models.TimeField(blank=True, null=True)),
                ('closing_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Emergency Hospital',
                'verbose_name_plural': 'Emergency Hospitals',
            },
        ),
        migrations.CreateModel(
            name='EmergencyRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('blood_group', models.CharField(choices=[('A+', 'A Positive'), ('A-', 'A Negative'), ('B+', 'B Positive'), ('B-', 'B Negative'), ('AB+', 'AB Positive'), ('AB-', 'AB Negative'), ('O+', 'O Positive'), ('O-', 'O Negative')], max_length=5)),
                ('quantity_needed', models.PositiveIntegerField(help_text='Required quantity in bags')),
                ('urgency', models.CharField(choices=[('CRITICAL', 'Critical - Life Threatening'), ('URGENT', 'Urgent - Within Hours'), ('ROUTINE', 'Routine - Within Day')], default='URGENT', max_length=20)),
                ('user_latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('user_longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('user_location_text', models.CharField(blank=True, help_text='Manual location if GPS unavailable', max_length=500)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_name', models.CharField(blank=True, max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SEARCHING', 'Searching Hospitals'), ('FOUND', 'Hospitals Found'), ('NOTIFIED', 'User Notified'), ('COMPLETED', 'Request Completed'), ('FAILED', 'No Hospitals Available')], default='PENDING', max_length=20)),
                ('notification_sent', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('email_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True)),
                ('user_feedback', models.TextField(blank=True)),
                ('hospitals_found', models.ManyToManyField(blank=True, related_name='emergency_requests', to='emergency.emergencyhospital')),
            ],
            options={
                'verbose_name': 'Emergency Request',
                'verbose_name_plural': 'Emergency Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('SMS', 'SMS Message'), ('EMAIL', 'Email Message'), ('PUSH', 'Push Notification')], max_length=10)),
                ('recipient', models.CharField(help_text='Phone number or email', max_length=200)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent Successfully'), ('FAILED', 'Failed to Send'), ('DELIVERED', 'Delivered')], default='PENDING', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('provider_response', models.TextField(blank=True, help_text='Response from SMS/Email provider')),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='emergency.emergencyrequest')),
            ],
            options={
                'verbose_name': 'Emergency Notification',
                'verbose_name_plural': 'Emergency Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_requests', models.PositiveIntegerField(default=0)),
                ('successful_requests', models.PositiveIntegerField(default=0)),
                ('failed_requests', models.PositiveIntegerField(default=0)),
                ('blood_group', models.CharField(blank=True, max_length=5)),
                ('demand_count', models.PositiveIntegerField(default=0)),
                ('avg_response_time', models.FloatField(default=0.0)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('requests_by_city', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Emergency Analytics',
                'verbose_name_plural': 'Emergency Analytics',
                'unique_together': {('date', 'blood_group', 'city')},
            },
        ),
        migrations.CreateModel(
            name='EmergencyBloodStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_group', models.CharField(choices=[('A+', 'A Positive'), ('A-', 'A Negative'), ('B+', 'B Positive'), ('B-', 'B Negative'), ('AB+', 'AB Positive'), ('AB-', 'AB Negative'), ('O+', 'O Positive'), ('O-', 'O Negative')], max_length=5)),
                ('units_available', models.PositiveIntegerField(default=0, help_text='Available in bags')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('expiry_alert_threshold', models.PositiveIntegerField(default=7, help_text='Days before expiry to alert')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospital_blood_stock', to='emergency.emergencyhospital')),
            ],
            options={
                'verbose_name': 'Emergency Blood Stock',
                'verbose_name_plural': 'Emergency Blood Stocks',
                'unique_together': {('hospital', 'blood_group')},
            },
        ),
    ]
