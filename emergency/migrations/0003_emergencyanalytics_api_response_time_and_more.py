# Generated by Django 4.2.16 on 2025-09-19 21:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('emergency', '0002_add_twilio_balance_fields'),
    ]

    operations = [
        migrations.AddField(
            model_name='emergencyanalytics',
            name='api_response_time',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='emergencyanalytics',
            name='critical_alerts_generated',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='emergencyanalytics',
            name='hospitals_active',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='emergencyanalytics',
            name='sms_success_rate',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='emergencyanalytics',
            name='total_inventory_system',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.CreateModel(
            name='HospitalRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('government_reg_number', models.CharField(help_text='Government Registration Number', max_length=100, unique=True)),
                ('medical_license_number', models.CharField(help_text='Medical Council License Number', max_length=100)),
                ('blood_bank_license', models.CharField(blank=True, help_text='Blood Bank License (if applicable)', max_length=100)),
                ('facility_type', models.CharField(choices=[('HOSPITAL', 'General Hospital'), ('BLOOD_BANK', 'Blood Bank'), ('TRAUMA_CENTER', 'Trauma Center'), ('SPECIALTY', 'Specialty Hospital'), ('GOVERNMENT', 'Government Hospital'), ('PRIVATE', 'Private Hospital')], default='HOSPITAL', max_length=20)),
                ('bed_capacity', models.PositiveIntegerField(help_text='Total bed capacity')),
                ('blood_bank_capacity', models.PositiveIntegerField(default=0, help_text='Blood storage capacity in bags')),
                ('registration_certificate', models.FileField(help_text='Government Registration Certificate', upload_to='hospital_docs/certificates/')),
                ('medical_license_doc', models.FileField(help_text='Medical License Document', upload_to='hospital_docs/licenses/')),
                ('authorization_letter', models.FileField(help_text='Government Authorization Letter', upload_to='hospital_docs/letters/')),
                ('authorized_person_name', models.CharField(help_text='Name of Authorized Person', max_length=200)),
                ('authorized_person_designation', models.CharField(help_text='Designation (e.g., Medical Director)', max_length=100)),
                ('authorized_person_phone', models.CharField(max_length=20)),
                ('authorized_person_email', models.EmailField(max_length=254)),
                ('registration_status', models.CharField(choices=[('PENDING', 'Pending Verification'), ('VERIFIED', 'Government Verified'), ('REJECTED', 'Verification Failed'), ('SUSPENDED', 'Temporarily Suspended')], default='PENDING', max_length=20)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('serves_underprivileged', models.BooleanField(default=False, help_text='Serves underprivileged patients')),
                ('free_emergency_quota', models.PositiveIntegerField(default=0, help_text='Free emergency blood bags per month')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='registration', to='emergency.emergencyhospital')),
                ('verified_by', models.ForeignKey(blank=True, help_text='Government Official who verified', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Hospital Registration',
                'verbose_name_plural': 'Hospital Registrations',
            },
        ),
        migrations.CreateModel(
            name='CriticalStockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_group', models.CharField(choices=[('A+', 'A Positive'), ('A-', 'A Negative'), ('B+', 'B Positive'), ('B-', 'B Negative'), ('AB+', 'AB Positive'), ('AB-', 'AB Negative'), ('O+', 'O Positive'), ('O-', 'O Negative')], max_length=5)),
                ('current_stock', models.PositiveIntegerField()),
                ('alert_level', models.CharField(choices=[('LOW', 'Low Stock (< 10 bags)'), ('CRITICAL', 'Critical Stock (< 5 bags)'), ('EMERGENCY', 'Emergency Stock (< 2 bags)'), ('DEPLETED', 'Completely Depleted (0 bags)')], max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active Alert'), ('ACKNOWLEDGED', 'Acknowledged'), ('RESOLVED', 'Resolved'), ('ESCALATED', 'Escalated to Authorities')], default='ACTIVE', max_length=20)),
                ('authorities_notified', models.BooleanField(default=False)),
                ('escalation_timestamp', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emergency.emergencyhospital')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Critical Stock Alert',
                'verbose_name_plural': 'Critical Stock Alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BloodInventoryUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_group', models.CharField(choices=[('A+', 'A Positive'), ('A-', 'A Negative'), ('B+', 'B Positive'), ('B-', 'B Negative'), ('AB+', 'AB Positive'), ('AB-', 'AB Negative'), ('O+', 'O Positive'), ('O-', 'O Negative')], max_length=5)),
                ('previous_count', models.PositiveIntegerField()),
                ('new_count', models.PositiveIntegerField()),
                ('change_reason', models.CharField(help_text='Reason for inventory change', max_length=200)),
                ('is_verified', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emergency.emergencyhospital')),
                ('updated_by', models.ForeignKey(help_text='Hospital staff who updated', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_updates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blood Inventory Update',
                'verbose_name_plural': 'Blood Inventory Updates',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SocialImpactMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_requests', models.PositiveIntegerField(default=0)),
                ('free_treatments', models.PositiveIntegerField(default=0)),
                ('paid_treatments', models.PositiveIntegerField(default=0)),
                ('rural_patients', models.PositiveIntegerField(default=0)),
                ('urban_patients', models.PositiveIntegerField(default=0)),
                ('emergency_cases', models.PositiveIntegerField(default=0)),
                ('lives_saved', models.PositiveIntegerField(default=0)),
                ('response_time_avg', models.FloatField(default=0.0, help_text='Average response time in minutes')),
                ('public_inventory_views', models.PositiveIntegerField(default=0)),
                ('successful_matches', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='emergency.emergencyhospital')),
            ],
            options={
                'verbose_name': 'Social Impact Metrics',
                'verbose_name_plural': 'Social Impact Metrics',
                'unique_together': {('date', 'hospital')},
            },
        ),
    ]
